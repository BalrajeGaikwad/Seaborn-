# -*- coding: utf-8 -*-
"""seaborn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z76zDfxoOZc8HYhEcW53Zjcyy62IAkUd
"""

import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

tips=sns.load_dataset('tips')

tips

#sctter plot ---> Axis level function

sns.scatterplot(data=tips, x='total_bill', y="tip", hue="sex", style='time', size='size')

#relplot---> Figure Level Function ----> square shape
sns.relplot(data=tips, x='total_bill', y="tip", kind='scatter',hue="sex", style='time')

#Line Plot

gap=px.data.gapminder()
gap

temp_df=gap[gap['country']=='India']
temp_df

#axis level function
sns.lineplot(data=temp_df, x='year', y='lifeExp')

#using releplot
sns.relplot(data=temp_df,x='year', y='lifeExp',kind='line' )

#hue -->style

temp_df=gap[gap['country'].isin(['India',"Pakistan",'China'])]
temp_df

sns.relplot(kind='line',data=temp_df, x='year',y='lifeExp', hue='country')

sns.lineplot(data=temp_df, x='year',y='lifeExp', hue='country')

temp_df=gap[gap['country'].isin(['India',"Brazil",'Germany'])]
temp_df

sns.relplot(kind='line',data=temp_df, x='year',y='lifeExp', hue='country', style='continent', size='continent')

tips

# Facet Plot
sns.relplot(data=tips, x='total_bill', y='tip',kind='scatter', hue='sex')

# Facet Plot
sns.relplot(data=tips, x='total_bill', y='tip',kind='scatter', col='sex')

# Facet Plot
sns.relplot(data=tips, x='total_bill', y='tip',kind='scatter', row='sex', col='smoker')

# Facet Plot
sns.relplot(data=tips, x='total_bill', y='tip',kind='scatter', row='day', col='sex')

gap

sns.relplot(data=gap,x='lifeExp',y='gdpPercap',kind='scatter', col='year', col_wrap=4)



"""# Distribution **Plot**"""



"""Histogram **Plot**"""

sns.histplot(data=tips, x='total_bill')

sns.displot(data=tips, x='total_bill', kind='hist')

# bin parameter

sns.displot(data=tips, x='total_bill', kind='hist', bins=20)

# It also possible to visualize the distribution of categorical variable using the logic of a histogram
# Discrete bins are automatically set for categorical variables
tips

sns.displot(data=tips, x='day', kind='hist')# how many customes in per day

#hue parameter

sns.displot(data=tips, x='tip', kind='hist', hue='sex')

# element ---> step
sns.displot(data=tips, x='tip', kind='hist', hue='sex',element='step')

titanic=sns.load_dataset('titanic')
titanic

sns.displot(data=titanic, x='age', kind='hist',element='step')

sns.displot(data=titanic, x='age', kind='hist',element='step',hue='sex')



"""# **KDE Plot- Kernal Density Estimation**

#Rather than using discrete bins, a kde plot smoots the observations with a Gaussian kernal, Producing a continuous density estimate
"""

tips

sns.kdeplot(data=tips, x="total_bill")

sns.displot(data=tips, x="total_bill")

sns.kdeplot(data=tips, x="total_bill",hue='sex')

#Bivariate Kdeplot
# a bivariate KDE plot smoothes the (x,y) observations with a 2D Gaussian

sns.kdeplot(data=tips, x='total_bill', y='tip')



"""# **Matrix Plot**

1) Heatmap
2) Clustermap
"""

gap

gap.pivot(index='country', columns='year',values='lifeExp')

temp_df=gap.pivot(index='country', columns='year',values='lifeExp')

temp_df

temp_df=gap.pivot(index='country', columns='year',values='lifeExp')
plt.figure(figsize=(15,15))
sns.heatmap(temp_df)

#annot
temp_df=gap[gap['continent']== 'Europe'].pivot(index='country', columns='year',values='lifeExp')
plt.figure(figsize=(15,15))
sns.heatmap(temp_df, annot=True, linewidth=0.5)

